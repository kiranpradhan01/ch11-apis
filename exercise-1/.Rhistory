# Load the httr and jsonlite libraries for accessing data
# You can also load `dplyr` if you wish to use it
library(httr)
library(jsonlite)
library(dplyr)
# Create a variable for the API's base URI (https://api.github.com)
base_uri <- "https://api.github.com"
# Create a variable for the API's base URI (https://api.github.com)
base_uri <- "https://api.github.com"
# Create a variable for the API's base URI (https://api.github.com)
base_uri <- "https://api.github.com"
# Create a variable for the API's base URI (https://api.github.com)
base_uri <- "https://api.github.com"
# Under the "Repositories" category of the API,
# find the endpoint that will list repos in an organization. Then,
# Create a variable `resource` that stores the endpoint for the "info201"
# organization repos (this is the PATH to the resource of interest).
# (FYI: this is where we keep the book code and master exercise sets!)
resource <- "/repos/info201/"
# Send a GET request to this endpoint (the `base_uri`` followed by `resource`)
reponse <- GET(paste0(base_uri,resource))
# Extract the "text" of the response usin the `content` function
response.content <- content(reponse,"text")
# Convert the body from JSON into a data frame
body.data <- fromJSON(response.content)
# How many (public) repositories does the organization have?
str(body.data)
names(body.data)
# Under the "Repositories" category of the API,
# find the endpoint that will list repos in an organization. Then,
# Create a variable `resource` that stores the endpoint for the "info201"
# organization repos (this is the PATH to the resource of interest).
# (FYI: this is where we keep the book code and master exercise sets!)
resource <- "/orgs/info201"
# Send a GET request to this endpoint (the `base_uri`` followed by `resource`)
reponse <- GET(paste0(base_uri,resource))
# Create a variable for the API's base URI (https://api.github.com)
base_uri <- "https://api.github.com"
# Under the "Repositories" category of the API,
# find the endpoint that will list repos in an organization. Then,
# Create a variable `resource` that stores the endpoint for the "info201"
# organization repos (this is the PATH to the resource of interest).
# (FYI: this is where we keep the book code and master exercise sets!)
resource <- "/orgs/info201"
# Send a GET request to this endpoint (the `base_uri`` followed by `resource`)
reponse <- GET(paste0(base_uri,resource))
response.content
# Create a variable for the API's base URI (https://api.github.com)
base_uri <- "https://api.github.com"
# Under the "Repositories" category of the API,
# find the endpoint that will list repos in an organization. Then,
# Create a variable `resource` that stores the endpoint for the "info201"
# organization repos (this is the PATH to the resource of interest).
# (FYI: this is where we keep the book code and master exercise sets!)
resource <- "/orgs/info201/repos"
# Send a GET request to this endpoint (the `base_uri`` followed by `resource`)
reponse <- GET(paste0(base_uri,resource))
# Extract the "text" of the response usin the `content` function
response.content <- content(reponse,"text")
# Convert the body from JSON into a data frame
body.data <- fromJSON(response.content)
# How many (public) repositories does the organization have?
str(body.data)
names(body.data)
# How many (public) repositories does the organization have?
View(body.data)
print(nrow(body.data))
